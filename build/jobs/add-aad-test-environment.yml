jobs:  
- job: setup
  pool:
    vmImage: $(WindowsVmImage)
  steps:
  - task: AzureKeyVault@1
    displayName: 'Azure Key Vault: resolute-oss-tenant-info'
    inputs:
      azureSubscription: $(ConnectedServiceName)
      KeyVaultName: 'resolute-oss-tenant-info'

  - task: AzurePowerShell@4
    displayName: Setup Test Environment
    inputs:
      azureSubscription: $(ConnectedServiceName)
      azurePowerShellVersion: latestVersion
      ScriptType: inlineScript
      Inline: |
        Install-Module -Name AzureAD -Force -Verbose -Scope CurrentUser
        $tenantId = "$(tenant-id)"

        # Get admin token
        $username = "$(tenant-admin-user-name)"
        $password_raw = "$(tenant-admin-user-password)"
        $password =  ConvertTo-SecureString -AsPlainText $password_raw -Force
        $adminCredential = New-Object PSCredential $username,$password
 
        $adTokenUrl = "https://login.microsoftonline.com/$tenantId/oauth2/token"
        $resource = "https://graph.windows.net/"
 
        $body = @{
            grant_type = "password"
            username   = $username
            password   = $password_raw
            resource   = $resource 
            client_id  = "1950a258-227b-4e31-a9cf-717495945fc2" # Microsoft Azure PowerShell
        }

        # If a deleted keyvault exists, remove it first
        if (Get-AzKeyVault -VaultName "$(DeploymentEnvironmentName)-ts" -Location "westus" -InRemovedState)
        {
            Remove-AzKeyVault -VaultName "$(DeploymentEnvironmentName)-ts" -InRemovedState -Location "westus" -Force
        }
 
        $response = Invoke-RestMethod -Method 'Post' -Uri $adTokenUrl -ContentType "application/x-www-form-urlencoded" -Body $body
        Connect-AzureAD -TenantId $tenantId -AadAccessToken $response.access_token -AccountId $username

        Import-Module $(System.DefaultWorkingDirectory)/samples/scripts/PowerShell/FhirServer/FhirServer.psd1
        Import-Module $(System.DefaultWorkingDirectory)/release/scripts/PowerShell/FhirServerRelease/FhirServerRelease.psd1

        $output = Add-AadTestAuthEnvironment -TestAuthEnvironmentPath $(System.DefaultWorkingDirectory)/testauthenvironment.json -EnvironmentName $(DeploymentEnvironmentName) -TenantAdminCredential $adminCredential
